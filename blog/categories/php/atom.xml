<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: php | 10rane.com]]></title>
  <link href="http://tatsuyano.github.io/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://tatsuyano.github.io/"/>
  <updated>2013-09-05T22:41:23+09:00</updated>
  <id>http://tatsuyano.github.io/</id>
  <author>
    <name><![CDATA[tatsuyano]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HandlerSocketをインストールする]]></title>
    <link href="http://tatsuyano.github.io/blog/2013/06/10/handlersocket-install/"/>
    <updated>2013-06-10T00:56:00+09:00</updated>
    <id>http://tatsuyano.github.io/blog/2013/06/10/handlersocket-install</id>
    <content type="html"><![CDATA[<h2>インストールする内容</h2>

<ul>
<li>rpm版 MySQL 5.1.68</li>
<li>HandlerSocket-Plugin-for-MySQL 最新版(2013/06/05)</li>
<li>php-handlersocket 0.3.1</li>
</ul>


<h2>作業の流れ</h2>

<ol>
<li>すでにyumでインストールしてあるMySQLの削除</li>
<li>MySQL(rpm版)のインストール</li>
<li>Handler Socketのインストール</li>
<li>php-handlersocketのインストール</li>
</ol>


<h2>すでにyumでインストールしてあるMySQLの削除</h2>

<p>前にテスト導入で成功したバージョンにあわせるため、yumでインストールしたMySQLを削除</p>

<h3>インストール済みのMySQLを確認</h3>

<p><code>
yum list installed | grep mysql
mysql.x86_64            5.1.69-1.el6_4  @updates
mysql-libs.x86_64       5.1.69-1.el6_4  @updates
mysql-server.x86_64     5.1.69-1.el6_4  @updates
php-mysql.x86_64        5.3.3-22.el6    @base
</code></p>

<h3>chkconfigからmysqldをoff</h3>

<p>```
chkconfig &mdash;list mysqld
mysqld          0:off   1:off   2:on    3:on    4:on    5:on    6:off</p>

<p>chkconfig mysqld off
```</p>

<h3>yumでインストールしたMySQLを削除</h3>

<p><code>
yum -y remove mysql mysql-server mysql-libs
</code></p>

<h2>MySQL(rpm版)のインストール</h2>

<p>過去にインストールしたmysqlのバージョンは5.1.66 だったが見つからなかったので、<br/>
近いバージョンの5.1.68をインストールすることにした。</p>

<h3>インストール先のディレクトリ作成</h3>

<p><code>
mkdir -p /usr/src/redhat/RPMS/x86_64/
cd /usr/src/redhat/
mkdir BUILD SOURCES SPECS SRPMS
</code></p>

<h3>rpmファイルのダウンロード</h3>

<p><code>
cd /usr/src/redhat/RPMS/x86_64/
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/MySQL-client-community-5.1.68-1.rhel5.x86_64.rpm
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/MySQL-server-community-5.1.68-1.rhel5.x86_64.rpm
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/MySQL-devel-community-5.1.68-1.rhel5.x86_64.rpm
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/MySQL-shared-community-5.1.68-1.rhel5.x86_64.rpm
</code></p>

<h3>インストール</h3>

<p><code>
rpm -ivh MySQL*.rpm
</code></p>

<h3>インストールの確認</h3>

<p><code>
/etc/init.d/mysql start
/usr/bin/mysql -uroot
</code></p>

<h2>Handler Socketのインストール</h2>

<p>Handler Socketをインストールするには、MySQLのソース版とgitが必要。</p>

<h3>起動中のMySQLを停止させる(念のため)</h3>

<p><code>
/etc/init.d/mysql stop
</code></p>

<h3>MySQLのソース版をダウンロード</h3>

<p>ダウンロードするソースは、先ほどインストールしたMySQL 5.1.68と合わせること。</p>

<p><code>
cd /usr/src/redhat/SRPMS/
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/MySQL-community-5.1.68-1.rhel5.src.rpm
rpm -ivh MySQL-community-5.1.68-1.rhel5.src.rpm
</code>
<code>
cd /usr/src/redhat/SOURCES/
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/mysql-5.1.68.tar.gz
tar xvzf mysql-5.1.68.tar.gz
</code></p>

<h3>必要なライブラリなどをyumでインストール</h3>

<p><code>
yum -y install libtool gcc gcc-c++ openssl-devel
</code></p>

<h3>HandlerSocket-Plugin-for-MySQLをダウンロード(git clone)</h3>

<p><code>
cd /tmp/
git clone git://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL.git
</code></p>

<h3>configure and make install</h3>

<p>```
cd /tmp/HandlerSocket-Plugin-for-MySQL/</p>

<p>./autogen.sh</p>

<p>./configure \
&mdash;with-mysql-source=/usr/src/redhat/SOURCES/mysql-5.1.68 \
&mdash;with-mysql-bindir=/usr/bin \
&mdash;with-mysql-plugindir=/usr/lib64/mysql/plugin
make
make install
```</p>

<ul>
<li>with-mysql-source&hellip;.. MySQLのソースコードのトップディレクトリを指定します。</li>
<li>with-mysql-bindir&hellip;.. インストール済みのMySQLのmysql_configコマンドが有るディレクトリを指定します。"which mysql_config"で調べます。</li>
<li>with-mysql-plugindir.. MySQLのpluginディレクトリを指定します。以下のコマンドで確認できます。
<code>
cd /usr/src/redhat/RPMS/x86_64/
rpm -ql MySQL-server-community-5.1.68-1.rhel5 | grep plugin
/usr/lib64/mysql/plugin/ha_innodb_plugin.so
/usr/lib64/mysql/plugin/ha_innodb_plugin.so.0
/usr/lib64/mysql/plugin/ha_innodb_plugin.so.0.0.0
</code></li>
</ul>


<h3>configure 時の注意</h3>

<p>自分は &mdash;with-mysql-plugindirのパスを間違えて、<br/>
&mdash;with-mysql-plugindir=/usr/lib64/mysql/plugin ではなく、<br/>
&mdash;with-mysql-plugindir=/usr/lib/mysql/plugin で指定したために、<br/>
「libtool: link: only absolute run-paths are allowed」とうエラーが出てしまいうまくいかなった。<br/>
うまくいかないときは、一度 make clean して再度 configure のパラメータを確認すること。</p>

<h3>handlersocketのpluginが入っているか(インストールがうまくいっているかの)確認</h3>

<p><code>
ll /usr/lib64/mysql/plugin/handlersocket*
-rw-r--r-- 1 root root  3519732  6月  7 10:16 2013 handlersocket.a
-rwxr-xr-x 1 root root      972  6月  7 10:16 2013 handlersocket.la
lrwxrwxrwx 1 root root       22  6月  7 10:16 2013 handlersocket.so -&gt; handlersocket.so.0.0.0
lrwxrwxrwx 1 root root       22  6月  7 10:16 2013 handlersocket.so.0 -&gt; handlersocket.so.0.0.0
-rwxr-xr-x 1 root root  1708138  6月  7 10:16 2013 handlersocket.so.0.0.0
</code></p>

<h3>pluginのインストール</h3>

<p>```
/etc/init.d/mysql start
mysql -uroot;</p>

<p>mysql> install plugin handlersocket soname &lsquo;handlersocket.so&rsquo;;
mysql> show plugin;
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
| Name          | Status   | Type           | Library          | License |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
| binlog        | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| partition     | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| ARCHIVE       | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| BLACKHOLE     | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| CSV           | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| FEDERATED     | DISABLED | STORAGE ENGINE | NULL             | GPL     |
| MEMORY        | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| InnoDB        | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| MyISAM        | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| MRG_MYISAM    | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| handlersocket | ACTIVE   | DAEMON         | handlersocket.so | BSD     |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
11 rows in set, 1 warning (0.00 sec)
```</p>

<h3>my.cnf の設定</h3>

<p>```
/etc/init.d/mysql stop
cat > /etc/my.cnf
[mysqld]
handlersocket_port =    9998 # handlersocketが接続を受け付けるポート(参照系リクエスト用)
handlersocket_port_wr = 9999 # handlersocketが接続を受け付けるポート(更新系リクエスト用)
handlersocket_address =      # handlersocketがバインドするアドレス(空のままでOK)
handlersocket_verbose = 0    # デバッグ用
handlersocket_timeout = 300  # 通信タイムアウト(秒)
handlersocket_threads = 16   # handlersocketのワーカースレッド数
thread_concurrency = 128     # handlersocketが幾つかのスレッドを占有するため、大きめの値を指定してください
open_files_limit = 65535</p>

<p>/etc/init.d/mysql start
```</p>

<h2>php-handlersocketのインストール</h2>

<h3>ソースのダウンロード</h3>

<p><code>
cd /tmp/
wget https://php-handlersocket.googlecode.com/files/php-handlersocket-0.3.1.tar.gz
tar xvzf php-handlersocket-0.3.1.tar.gz
</code></p>

<h3>configure and make install</h3>

<p><code>
cd handlersocket
phpize
./configure
make
make install
Installing shared extensions:     /usr/lib64/php/modules/
Installing header files:          /usr/include/php/
</code></p>

<h3>php.iniへ追加、httpdの再起動</h3>

<p><code>
echo "extension=handlersocket.so" &gt; /etc/php.d/hs.ini
/etc/init.d/httpd restart
</code></p>

<p>php.iniへの追加を行わなかったために、Class not found になってしまった。<br/>
PHP Fatal error:  Class &lsquo;HandlerSocket&rsquo; not found in /tmp/handlersocket/examples/example.php on line 12<br/>
モジュールをインストール後は、/etc/php.d/以下に設定ファイルを配置し、httpdを再起動する。</p>

<ul>
<li><a href="http://qiita.com/items/540fd2ecdc98a7549fcb">AWS EC2にhandlersocketを入れるまで</a></li>
</ul>


<h3>php-handlersocketのインストール確認</h3>

<p>まずはphpinfo.phpを確認する。</p>

<blockquote><p>handlersocket<br/>
MySQL HandlerSocket support enabled<br/>
extension Version           0.3.1<br/>
hsclient Library Support    enabled</p></blockquote>

<h3>exsampleを動かし、最終確認</h3>

<p>handlersocketに付属しているexamplesを実行し最終確認する。</p>

<p><code>
cd /tmp/handlersocket/examples/
</code></p>

<p>テスト用のDB、テーブルを作成し、6件ほどレコードをinsertする</p>

<p>```
emacs development.ja.php</p>

<p>CREATE DATABASE hstestdb;</p>

<p>CREATE TABLE hstesttbl (
  k varchar(30) PRIMARY KEY,
  v varchar(30) NOT NULL,
  f1 varchar(30),
  f2 varchar(30)
) Engine = innodb;</p>

<p>CREATE INDEX i1 ON hstesttbl(v, k);
INSERT INTO hstesttbl VALUES (&lsquo;k1&rsquo;, &lsquo;v1&rsquo;, &lsquo;f1&rsquo;, &lsquo;f2&rsquo;);
INSERT INTO hstesttbl VALUES (&lsquo;k2&rsquo;, &lsquo;v2&rsquo;, &lsquo;f2&rsquo;, NULL);
INSERT INTO hstesttbl VALUES (&lsquo;k3&rsquo;, &lsquo;v3&rsquo;, &lsquo;f3&rsquo;, &lsquo;&rsquo;);
INSERT INTO hstesttbl VALUES (&lsquo;k4&rsquo;, &lsquo;v4&rsquo;, &lsquo;f4&rsquo;, &lsquo;f24&rsquo;);
INSERT INTO hstesttbl VALUES (&lsquo;k5&rsquo;, &lsquo;v5&rsquo;, &lsquo;f5&rsquo;, NULL);
INSERT INTO hstesttbl VALUES (&lsquo;k6&rsquo;, &lsquo;v6&rsquo;, &lsquo;f6&rsquo;, &lsquo;&rsquo;);
```</p>

<p>php example.php
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">array</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>  <span class="k">array</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'><span class="nx">string</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="s2">&quot;k1&quot;</span>
</span><span class='line'><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'><span class="nx">string</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="s2">&quot;v1&quot;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">array</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>  <span class="k">array</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'><span class="nx">string</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="s2">&quot;k2&quot;</span>
</span><span class='line'><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'><span class="nx">string</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="s2">&quot;v2&quot;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">bool</span><span class="p">(</span><span class="k">false</span><span class="p">)</span>
</span><span class='line'><span class="mi">56</span><span class="o">:</span><span class="nx">op</span><span class="o">:</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>参考サイト</h2>

<p>以下のサイトを参考にさせていただきました。ありがとうございます！</p>

<ul>
<li><a href="http://kotaroito.hatenablog.com/entry/20111213/1323755054">CentOSにMySQLとHandler Socketを入れてみる</a></li>
<li><a href="http://akitosblog.seesaa.net/article/193127939.html">Akito&rsquo;s IT技術 メモ</a></li>
<li><a href="https://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL">HandlerSocket-Plugin-for-MySQL</a></li>
<li><a href="https://code.google.com/p/php-handlersocket/">php handler socket</a></li>
<li><a href="http://www.slideshare.net/akirahiguchi/handlersocket-etc-20110906">HandlerSocket について + a</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MAMP環境でのCakePHPのmysql.sockの指定方法]]></title>
    <link href="http://tatsuyano.github.io/blog/2013/02/04/mamp-cakephp-mysql/"/>
    <updated>2013-02-04T12:33:00+09:00</updated>
    <id>http://tatsuyano.github.io/blog/2013/02/04/mamp-cakephp-mysql</id>
    <content type="html"><![CDATA[<h2>worning</h2>

<p>MacにMAMPをインストールし、CakePHPの「bakeコンソール」でModelクラスを作成したさいに、mysql.sockの指定箇所が違うよと警告された</p>

<p>```
Warning Error: PDO::__construct(): [2002] No such file or directory (trying to connect via unix:///var/mysql/mysql.sock) in [/Applications/MAMP/htdocs/bake/lib/Cake/Model/Datasource/Database/Mysql.php, line 149]</p>

<p>Error: Database connection &ldquo;SQLSTATE[HY000] [2002] No such file or directory&rdquo; is missing, or could not be created.</p>

<h1>0 /Applications/MAMP/htdocs/bake/lib/Cake/Model/Datasource/DboSource.php(260): Mysql->connect()</h1>

<p>```</p>

<p>MAMPを使っているので、mysql.sockは「/Applications/MAMP/tmp/mysql/mysql.sock」作成されている。<br/>
たぶん解決方法としては３つあって、<br/>
1.sockファイルをworiningに書いてある「/var/mysql/mysql.sock」に生成するようMysql側の設定をいじる。<br/>
2.「/var/mysql/mysql.sock」に「/Applications/MAMP/tmp/mysql/mysql.sock」のリンクを貼ってしまう。<br/>
3.たぶん「app/Config/database.php」に現在生成されているmysql.sockの場所を指定する。</p>

<p>どう考えても「３」が正しいやり方だと思うけど、なかなかそれっぽい情報が引っかからなかったがやっとあった。</p>

<p><a href="http://stackoverflow.com/questions/1688705/cakephp-console-bake-on-mac-os-with-mamp-database-connection-error">Cakephp console (bake) on Mac OS with Mamp : database connection error</a></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">public</span> <span class="nv">$default</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="s1">&#39;datasource&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;Database/Mysql&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;persistent&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="k">false</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;host&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;localhost&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;login&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;USERNAME&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;password&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;PASSWORD&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;database&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;DATABASE&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;encoding&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;utf8&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;unix_socket&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;/Applications/MAMP/tmp/mysql/mysql.sock&#39;</span> <span class="c1"># &amp;lt;- this</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>2.x系から、socketの指定がデフォルトと違う場合に上記のように設定する模様。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacのPHP開発環境を整える]]></title>
    <link href="http://tatsuyano.github.io/blog/2012/11/02/mamp-php-mac/"/>
    <updated>2012-11-02T10:35:00+09:00</updated>
    <id>http://tatsuyano.github.io/blog/2012/11/02/mamp-php-mac</id>
    <content type="html"><![CDATA[<h2>はじめに</h2>

<p>勉強のためにローカル上でのPHP開発環境を作ろうと思います。</p>

<h2>MAMPのインストール</h2>

<p>macにapache,mysql,phpをセットにしたものをインストールするためのソフト。<br/>
M(ac) A(pache) M(ysql) P(hp)。同じ用途でXAMPPというのもありますが、私の環境ではうまく動きませんでした。</p>

<ul>
<li><a href="http://www.be-webdesigner.com/technotes/server/install/mamp.htm">MAMPのインストール for Mac</a></li>
<li><a href="http://www.mamp.info/en/">MAMPのダウンロードサイト</a></li>
</ul>


<p>有償のPro版も同時にインストールされてしまいます。今回はPHPを少し触ってみたいだけなので、無償版を使います。</p>

<h2>emacsのPHP開発環境</h2>

<ul>
<li><a href="/blog/2012/10/29/emacs-php-mode/">php-mode.elをインストールする</a></li>
<li><a href="/blog/2012/10/29/emacs-php-completion/">php-completion.elをインストールする</a></li>
</ul>


<p><del datetime="2012-11-01T15:03:10+00:00">補完機能と色付けだけは欲しかったのでインストール。</del></p>

<p>php-mode.elだけだと、phpファイルにhtmlの記述がある(又はその逆)とインデントがくずれてしまう。<br/>
なので最終的に、「php-mode + php-completion + nXhtml』を使う形に落ち着いた。<br/>
＊php-completionはauto-completeの機能を利用している</p>

<ul>
<li><a href="/blog/2012/11/01/emacs-nxhtml/">nXhtmlをインストールする</a></li>
</ul>


<p>php-mode.elの設定(インデントと、phpファイルを開いたときのmode指定)をコメントアウト</p>

<p><code>scheme
emacs ~/.emacs.d/conf/50_php.el
;; php-mode
(require 'php-mode)
;;(setq php-mode-force-pear t) ;PEAR規約のインデント設定にする
;;(add-to-list 'auto-mode-alist '("\\.php$" . php-mode))
</code></p>

<h2>実行画面</h2>

<p>htmlとphpのコードで書かれているindex.phpを開いてみると、htmlのコードを編集すると(nXhtml/nxhtml lnValid)に</p>

<p><img src="https://dl.dropboxusercontent.com/u/159938/blog_images/nxhtml_001.png" alt="" /></p>

<p>phpのコードを編集すると(PHP/nxhtml Completion AC Abbrev)にmodeが切り替わる</p>

<p><img src="https://dl.dropboxusercontent.com/u/159938/blog_images/nxhtml_002.png" alt="" /></p>

<p>補完機能もちゃんと動いている</p>

<p><img src="https://dl.dropboxusercontent.com/u/159938/blog_images/nxhtml_003.png" alt="" />
＊nXhtmlで起動するさいに下記の警告がでるが、今のところ問題なく動いているので無視する</p>

<p><code>
Warning: `font-lock-syntactic-keywords' is an obsolete variable (as of 24.1);
use `syntax-propertize-function' instead.
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nXhtmlをインストールする]]></title>
    <link href="http://tatsuyano.github.io/blog/2012/11/01/emacs-nxhtml/"/>
    <updated>2012-11-01T10:27:00+09:00</updated>
    <id>http://tatsuyano.github.io/blog/2012/11/01/emacs-nxhtml</id>
    <content type="html"><![CDATA[<h2>nXhtmlとは</h2>

<p>htmlファイルには、javascriptやphp、perlなどhtml以外の複数の言語で書かれていたりする。<br/>
このため今までは、今書いている言語に合わせて、自分でモードの切り替えを行なっていたのだが、nXhtmlを使うと、自動で今書いている言語に合わせてモードを切り替えてくれる。</p>

<h2>インストール</h2>

<p>nXhtmlの<a href="http://ourcomments.org/cgi-bin/emacsw32-dl-latest.pl">本家サイト</a>の、Download latest nXhtml (zip file)からzipをダウンロードし、pathの通っている階層(add-to-list &lsquo;load-path &ldquo;~/.emacs.d/elisp&rdquo;)に移動。</p>

<p><code>
wget http://ourcomments.org/Emacs/DL/elisp/nxhtml/zip/nxhtml-2.08-100425.zip
tar xvzf nxhtml-2.08-100425.zip
mv nxhtml .emacs.d/elisp/
</code></p>

<p>.emacs.elに一行追加。<br/>
※ 00_init.elに追加するとエラーになってしまったため、やむなく.emacs.elに追加</p>

<p><code>scheme
cat &gt;&gt; .emacs.el
(load "nxhtml/autostart.el")
</code></p>

<h2>バイトコンパイル</h2>

<p><code>
M-x nxhtmlmaint-start-byte-compilation
</code></p>

<p>コンパイル時にでるwarningの対応。下記の警告が出てくるので</p>

<p><code>scheme
Warning: `font-lock-beginning-of-syntax-function’ is an obsolete variable (as of Emacs 23.3); use `syntax-begin-function’ instead.
</code></p>

<p>.emacs.d/elisp/nxhtml/util/mumamo.elの「font-lock-beginning-of-syntax-function」を「syntax-begin-function」に置換し、再度コンパイル。</p>

<h2>nXhtmlのモードについて</h2>

<p>「nXhtml/nxhtml Invalid)」や「PHP/nxhtml Completion AC Abbrev」にするには</p>

<p><code>
M-x nxhtml-mumamo
</code></p>

<h2>参考サイト</h2>

<p>以下のサイトを参考にさせていただきました。ありがとうございます！</p>

<ul>
<li><a href="http://sanrinsha.lolipop.jp/blog/2011/05/web%E9%96%8B%E7%99%BA%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEemacs%E3%81%AE%E8%A8%AD%E5%AE%9A.html">Web開発のためのEmacsの設定</a></li>
<li><a href="http://ubuntu-note.blog.so-net.ne.jp/2010-11-13">Emacs23 に nXhtml をインストールしてみる</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php-completion.elをインストールする]]></title>
    <link href="http://tatsuyano.github.io/blog/2012/10/29/emacs-php-completion/"/>
    <updated>2012-10-29T10:24:00+09:00</updated>
    <id>http://tatsuyano.github.io/blog/2012/10/29/emacs-php-completion</id>
    <content type="html"><![CDATA[<h2>インストール</h2>

<p><code>
M-x auto-install-batch &lt;RET&gt;
Extension name: php-completion &lt;RET&gt;
</code></p>

<h2>.emacsの設定、50_php.elに追加</h2>

<p>``` scheme
cat >> .emacs.d/conf/50_php.el
;; php-mode-hook</p>

<pre><code>      (lambda ()
        (require 'php-completion)
        (php-completion-mode t)
        (define-key php-mode-map (kbd "C-o") 'phpcmp-complete)
        (make-local-variable 'ac-sources)
        (setq ac-sources '(
                           ac-source-words-in-same-mode-buffers
                           ac-source-php-completion
                           ac-source-filename
                           ))))
</code></pre>

<p>```</p>

<p>補完はするときはC-o、又はauto-complete.elの機能で自動で補完対象が出るようになります。</p>

<h2>参考サイト</h2>

<p>以下のサイトを参考にさせていただきました。ありがとうございます！</p>

<ul>
<li><a href="http://blog.fusic.co.jp/archives/94">PHP開発環境 on Emacs</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
